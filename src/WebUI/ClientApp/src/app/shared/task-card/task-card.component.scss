//task-card.component.scss


// Variables
$primary-color: #FF6B6B;
$secondary-color: #4ECDC4;
$accent-color: #45B7D1;
$success-color: #4ECDC4;
$warning-color: #FFA726;
$error-color: #EF5350;
$white: #FFFFFF;
$text-dark: #333333;
$text-light: #666666;
$text-lighter: #999999;
$border-radius: 12px;
$card-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
$transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

// Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Task Grid Layout
.tasks-grid {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 2rem;
  width: 100%;
}

.tasks-column {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem;
  width: 100%;
}

.completed-tasks {
  width: 350px;
  flex-shrink: 0;
}

// Task Card
.task-card {
  background: $white;
  border-radius: $border-radius;
  overflow: hidden;
  box-shadow: $card-shadow;
  border: 1px solid #F1F3F4;
  transition: $transition;
  position: relative;
  width: 100%;
  max-width: 400px;
  height: auto;
  min-height: 320px;
  display: flex;
  flex-direction: column;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);

    .task-overlay {
      opacity: 1;
    }

    .task-actions {
      opacity: 1;
    }
  }

  &.completed {
    opacity: 0.8;
    
    .task-image {
      filter: grayscale(0.3);
    }
  }
}

// Task Image
.task-image {
  position: relative;
  height: 140px;
  overflow: hidden;
  flex-shrink: 0;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: $transition;
  }

  .task-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.1) 0%,
      rgba(0, 0, 0, 0.4) 100%
    );
    @include flex-center;
    opacity: 0;
    transition: $transition;

    .task-action-btn {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.9);
      border: none;
      @include flex-center;
      color: $text-dark;
      font-size: 1rem;
      cursor: pointer;
      transition: $transition;
      backdrop-filter: blur(10px);

      &:hover {
        background: $white;
        transform: scale(1.1);
      }
    }
  }
}

// Task Content
.task-content {
  padding: 1rem;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

// Task Header
.task-header {
  @include flex-between;
  margin-bottom: 0.75rem;

  .task-priority {
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.65rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;

    &.priority-high {
      background: rgba(239, 83, 80, 0.1);
      color: $error-color;
    }

    &.priority-medium {
      background: rgba(255, 167, 38, 0.1);
      color: $warning-color;
    }

    &.priority-low {
      background: rgba(78, 205, 196, 0.1);
      color: $secondary-color;
    }
  }

  .task-actions {
    display: flex;
    gap: 0.125rem;
    opacity: 0;
    transition: $transition;

    .action-btn {
      width: 28px;
      height: 28px;
      border-radius: 4px;
      border: none;
      @include flex-center;
      background: transparent;
      color: $text-light;
      cursor: pointer;
      transition: $transition;
      font-size: 0.8rem;

      &:hover {
        background: rgba(0, 0, 0, 0.05);
        color: $text-dark;
      }

      &.edit-btn:hover {
        background: rgba(69, 183, 209, 0.1);
        color: $accent-color;
      }

      &.delete-btn:hover {
        background: rgba(239, 83, 80, 0.1);
        color: $error-color;
      }
    }
  }
}

// Task Title
.task-title {
  font-size: 1rem;
  font-weight: 600;
  color: $text-dark;
  margin: 0 0 0.5rem 0;
  line-height: 1.3;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;

  &.completed-text {
    text-decoration: line-through;
    color: $text-light;
  }
}

// Task Description
.task-description {
  font-size: 0.8rem;
  color: $text-light;
  line-height: 1.4;
  margin: 0 0 0.75rem 0;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  flex: 1;

  &.completed-text {
    text-decoration: line-through;
    color: $text-lighter;
  }
}

// Task Tags
.task-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
  margin-bottom: 0.75rem;

  .task-tag {
    padding: 0.125rem 0.375rem;
    background: rgba(69, 183, 209, 0.1);
    color: $accent-color;
    border-radius: 3px;
    font-size: 0.65rem;
    font-weight: 500;
  }
}

// Task Footer
.task-footer {
  @include flex-between;
  padding-top: 0.5rem;
  border-top: 1px solid #F1F3F4;
  margin-top: auto;

  .task-status {
    display: flex;
    align-items: center;
    gap: 0.375rem;

    .status-indicator {
      width: 6px;
      height: 6px;
      border-radius: 50%;

      &.status-not-started {
        background: $error-color;
      }

      &.status-in-progress {
        background: $accent-color;
      }

      &.status-completed {
        background: $success-color;
      }
    }

    .status-text {
      font-size: 0.75rem;
      color: $text-light;
      font-weight: 500;
    }
  }

  .task-due-date {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.75rem;
    color: $text-light;

    &.overdue {
      color: $error-color;
    }

    i {
      opacity: 0.7;
      font-size: 0.7rem;
    }
  }
}

// Completed Footer
.completed-footer {
  @include flex-between;
  padding-top: 0.5rem;
  border-top: 1px solid #F1F3F4;
  margin-top: auto;

  .completion-info {
    .completion-text {
      font-size: 0.75rem;
      color: $success-color;
      font-weight: 500;
    }
  }

  .restore-btn {
    width: 28px;
    height: 28px;
    border-radius: 4px;
    border: none;
    @include flex-center;
    background: rgba(78, 205, 196, 0.1);
    color: $success-color;
    cursor: pointer;
    transition: $transition;
    font-size: 0.8rem;

    &:hover {
      background: rgba(78, 205, 196, 0.2);
    }
  }
}

// Color Picker
.color-picker {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: $white;
  border-radius: 8px;
  padding: 0.75rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  z-index: 10;

  .color-options {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 0.5rem;

    .color-option {
      width: 20px;
      height: 20px;
      border-radius: 3px;
      border: 2px solid transparent;
      cursor: pointer;
      transition: $transition;

      &:hover {
        transform: scale(1.1);
      }

      &.selected {
        border-color: $text-dark;
        transform: scale(1.1);
      }
    }
  }
}

// Completed Tasks Section
.completed-tasks {
  .completed-header {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
    padding: 0 0.5rem;

    .completed-icon {
      width: 18px;
      height: 18px;
      color: $success-color;
    }

    span {
      font-size: 1rem;
      font-weight: 600;
      color: $text-dark;
    }
  }

  .completed-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    .task-card {
      max-width: 100%;
      min-height: 200px;
    }
  }
}

// Responsive Design
@media (max-width: 1200px) {
  .tasks-grid {
    grid-template-columns: 1fr;
    gap: 2rem;
  }

  .completed-tasks {
    width: 100%;
  }

  .tasks-column {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }
}

@media (max-width: 768px) {
  .tasks-column {
    grid-template-columns: 1fr;
  }

  .task-card {
    max-width: 100%;
    
    .task-header .task-actions {
      opacity: 1; // Always show on mobile
    }

    .task-image {
      height: 120px;

      .task-overlay {
        opacity: 1; // Always show on mobile
      }
    }
  }

  .completed-tasks {
    .completed-list {
      .task-card {
        min-height: 180px;
      }
    }
  }
}

// Icon Classes (implement with your icon solution)
.icon-edit::before { content: "‚úèÔ∏è"; }
.icon-delete::before { content: "üóëÔ∏è"; }
.icon-menu::before { content: "‚ãØ"; }
.icon-calendar::before { content: "üìÖ"; }
.icon-restore::before { content: "‚Ü©Ô∏è"; }
.icon-play::before { content: "‚ñ∂Ô∏è"; }
.icon-pause::before { content: "‚è∏Ô∏è"; }
.icon-check::before { content: "‚úÖ"; }